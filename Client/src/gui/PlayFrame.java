package gui;

import game.logic.GameController;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;

/**
 * Form for playing the game.
 *
 * @author Lazar Ristic <lazar.ristic91@gmail.com>
 * @author Tihomir Radosavljevic
 * @version 1.1
 */
public class PlayFrame extends javax.swing.JFrame {

    /**
     * Creates new form PlayFrame
     */
    public PlayFrame() {
        initComponents();
        fixForm();
    }

    private JLabel label;
    private Timer timer;
    private int counter = 20; // the duration
    private final int delay = 1000; // every 1 second
    private static final long serialVersionUID = 1L;

    public void SimpleTimer() {
        setDefaultCloseOperation(EXIT_ON_CLOSE);

        jLabelTimer.setText("Igra traje još " + counter + " sekundi");
        JPanel contentPane = (JPanel) getContentPane();
        pack();

        ActionListener action = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent event) {
                if (counter == 0) {
                    timer.stop();
                    jBAnswer1.setEnabled(false);
                    jBAnswer2.setEnabled(false);
                    jBAnswer3.setEnabled(false);
                    jBAnswer4.setEnabled(false);
                    jLabelTimer.setText("Vreme je isteklo!");
                    //custom title, no icon
                    JOptionPane.showMessageDialog(jPanel1,
                            "Vas rezultat je " + GameController.getInstance().getResult().getValue(),
                            "Vreme vam je isteklo!",
                            JOptionPane.PLAIN_MESSAGE);
                    dispose();
                    GameController.getInstance().saveTest();
                } else {
                    jLabelTimer.setText("Igra traje još " + counter + " sekundi");
                    counter--;
                }
            }
        };

        timer = new Timer(delay, action);
        timer.setInitialDelay(0);
        timer.start();
        setVisible(true);
    }

    private void GameBegin() {
        jBAnswer1.setEnabled(true);
        jBAnswer2.setEnabled(true);
        jBAnswer3.setEnabled(true);
        jBAnswer4.setEnabled(true);
        GameController.getInstance().loadNewQuestion();
        jTextArea1.setText(GameController.getInstance().getQuestionText());
        String[] answersText = GameController.getInstance().getAnswersText();
        jBAnswer1.setText(answersText[0]);
        jBAnswer2.setText(answersText[1]);
        jBAnswer3.setText(answersText[2]);
        jBAnswer4.setText(answersText[3]);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jBAnswer1 = new javax.swing.JButton();
        jBAnswer2 = new javax.swing.JButton();
        jBAnswer3 = new javax.swing.JButton();
        jBAnswer4 = new javax.swing.JButton();
        jLabelTimer = new javax.swing.JLabel();

        jPanel1.setFocusable(false);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jBAnswer1.setText("Odgovor 1");
        jBAnswer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAnswer1ActionPerformed(evt);
            }
        });

        jBAnswer2.setText("Odgovor 2");
        jBAnswer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAnswer2ActionPerformed(evt);
            }
        });

        jBAnswer3.setText("Odgovor 3");
        jBAnswer3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAnswer3ActionPerformed(evt);
            }
        });

        jBAnswer4.setText("Odgovor 4");
        jBAnswer4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAnswer4ActionPerformed(evt);
            }
        });

        jLabelTimer.setText("TIMER");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTimer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBAnswer1, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                            .addComponent(jBAnswer3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBAnswer4, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                            .addComponent(jBAnswer2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTimer, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBAnswer1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAnswer2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBAnswer3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAnswer4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBAnswer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAnswer1ActionPerformed
        // TODO add your handling code here:
        String answer = jBAnswer1.getText();
        GameController.getInstance().answerQuestion(answer);

        if (!GameController.getInstance().isCorrect(jBAnswer1.getText())) {
            jBAnswer1.setForeground(Color.RED);
            jBAnswer1.setText(answer);
        }
        showRightAnswer();
        GameBegin();
    }//GEN-LAST:event_jBAnswer1ActionPerformed

    private void jBAnswer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAnswer2ActionPerformed
        String answer = jBAnswer2.getText();
        GameController.getInstance().answerQuestion(answer);

        if (!GameController.getInstance().isCorrect(jBAnswer2.getText())) {
            jBAnswer2.setForeground(Color.RED);
            jBAnswer2.setText(answer);
        }
        showRightAnswer();
        GameBegin();
    }//GEN-LAST:event_jBAnswer2ActionPerformed

    private void jBAnswer3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAnswer3ActionPerformed
        String answer = jBAnswer3.getText();
        GameController.getInstance().answerQuestion(answer);

        if (!GameController.getInstance().isCorrect(jBAnswer3.getText())) {
            jBAnswer3.setForeground(Color.RED);
            jBAnswer3.setText(answer);
        }
        showRightAnswer();
        GameBegin();
    }//GEN-LAST:event_jBAnswer3ActionPerformed

    private void jBAnswer4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAnswer4ActionPerformed
        String answer = jBAnswer4.getText();
        GameController.getInstance().answerQuestion(answer);

        if (!GameController.getInstance().isCorrect(jBAnswer4.getText())) {
            jBAnswer4.setForeground(Color.RED);
            jBAnswer4.setText(answer);
        }
        showRightAnswer();
        GameBegin();
    }//GEN-LAST:event_jBAnswer4ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAnswer1;
    private javax.swing.JButton jBAnswer2;
    private javax.swing.JButton jBAnswer3;
    private javax.swing.JButton jBAnswer4;
    private javax.swing.JLabel jLabelTimer;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    private void fixForm() {
        jTextArea1.setEditable(false);
        GameBegin();
        SimpleTimer();
    }

    private void showRightAnswer() {
        if (GameController.getInstance().isCorrect(jBAnswer1.getText())) {
            jBAnswer1.setForeground(Color.GREEN);
            JOptionPane.showMessageDialog(rootPane, "Tacan odgovor je " + jBAnswer1.getText());
        }
        if (GameController.getInstance().isCorrect(jBAnswer2.getText())) {
            jBAnswer2.setForeground(Color.GREEN);
            JOptionPane.showMessageDialog(rootPane, "Tacan odgovor je " + jBAnswer2.getText());
        }
        if (GameController.getInstance().isCorrect(jBAnswer3.getText())) {
            jBAnswer3.setForeground(Color.GREEN);
            JOptionPane.showMessageDialog(rootPane, "Tacan odgovor je " + jBAnswer3.getText());
        }
        if (GameController.getInstance().isCorrect(jBAnswer4.getText())) {
            jBAnswer4.setForeground(Color.GREEN);
            JOptionPane.showMessageDialog(rootPane, "Tacan odgovor je " + jBAnswer4.getText());
        }
        try {
            //wait 2 seconds
            Thread.sleep(2 * delay);
        } catch (InterruptedException ex) {
            Logger.getLogger(PlayFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        backToNormal();
    }

    private void backToNormal() {
        jBAnswer1.setForeground(Color.BLACK);
        jBAnswer2.setForeground(Color.BLACK);
        jBAnswer3.setForeground(Color.BLACK);
        jBAnswer4.setForeground(Color.BLACK);
    }
}
